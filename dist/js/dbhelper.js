class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t){fetch(DBHelper.DATABASE_URL).then(function(t){return t.json()}).then(function(e){t(null,e)}).catch(function(e){t(null,e)})}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((n,l)=>{if(n)e(n,null);else{const n=l.find(e=>e.id==t);n?e(null,n):e("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((n,l)=>{if(n)e(n,null);else{const n=l.filter(e=>e.cuisine_type==t);e(null,n)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((n,l)=>{if(n)e(n,null);else{const n=l.filter(e=>e.neighborhood==t);e(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,n){DBHelper.fetchRestaurants((l,a)=>{if(l)n(l,null);else{let l=a;"all"!=t&&(l=l.filter(e=>e.cuisine_type==t)),"all"!=e&&(l=l.filter(t=>t.neighborhood==e)),n(null,l)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,n)=>{if(e)t(e,null);else{const e=n.map((t,e)=>n[e].neighborhood),l=e.filter((t,n)=>e.indexOf(t)==n);t(null,l)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,n)=>{if(e)t(e,null);else{const e=n.map((t,e)=>n[e].cuisine_type),l=e.filter((t,n)=>e.indexOf(t)==n);t(null,l)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/img/${t.photograph}`}static mapMarkerForRestaurant(t,e){const n=new L.marker([t.latlng.lat,t.latlng.lng],{title:t.name,alt:t.name,url:DBHelper.urlForRestaurant(t)});return n.addTo(newMap),n}}